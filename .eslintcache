[{"/home/mateo/blog-elinoi/typescript-blog/src/index.tsx":"1","/home/mateo/blog-elinoi/typescript-blog/src/saga/saga.ts":"2","/home/mateo/blog-elinoi/typescript-blog/src/reducers/articles_reducer.ts":"3","/home/mateo/blog-elinoi/typescript-blog/src/reducers/author_reducer.ts":"4","/home/mateo/blog-elinoi/typescript-blog/src/reducers/authors_reducer.ts":"5","/home/mateo/blog-elinoi/typescript-blog/src/reducers/comments_reducer.ts":"6","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_index.tsx":"7","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_show.tsx":"8","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_update.tsx":"9","/home/mateo/blog-elinoi/typescript-blog/src/containers/home.tsx":"10","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_new.tsx":"11","/home/mateo/blog-elinoi/typescript-blog/src/containers/authors_index.tsx":"12","/home/mateo/blog-elinoi/typescript-blog/src/interface.ts":"13","/home/mateo/blog-elinoi/typescript-blog/src/actions/index.ts":"14","/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_index.tsx":"15","/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_new.tsx":"16","/home/mateo/blog-elinoi/typescript-blog/src/components/article.tsx":"17"},{"size":2268,"mtime":1612180455298,"results":"18","hashOfConfig":"19"},{"size":421,"mtime":1612176932275,"results":"20","hashOfConfig":"19"},{"size":862,"mtime":1612176903139,"results":"21","hashOfConfig":"19"},{"size":324,"mtime":1611937643482,"results":"22","hashOfConfig":"19"},{"size":278,"mtime":1611937649082,"results":"23","hashOfConfig":"19"},{"size":400,"mtime":1611937655286,"results":"24","hashOfConfig":"19"},{"size":1529,"mtime":1612178915554,"results":"25","hashOfConfig":"19"},{"size":3030,"mtime":1611937317679,"results":"26","hashOfConfig":"19"},{"size":3072,"mtime":1611937557431,"results":"27","hashOfConfig":"19"},{"size":3349,"mtime":1612179427148,"results":"28","hashOfConfig":"19"},{"size":2343,"mtime":1611937248505,"results":"29","hashOfConfig":"19"},{"size":2439,"mtime":1611937276558,"results":"30","hashOfConfig":"19"},{"size":548,"mtime":1611927267065,"results":"31","hashOfConfig":"32"},{"size":3655,"mtime":1612176861374,"results":"33","hashOfConfig":"19"},{"size":1075,"mtime":1611937300531,"results":"34","hashOfConfig":"19"},{"size":1573,"mtime":1611937232992,"results":"35","hashOfConfig":"19"},{"size":624,"mtime":1611937419350,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"7hc9dk",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xb7fnp",{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"/home/mateo/blog-elinoi/typescript-blog/src/index.tsx",[],["83"],"/home/mateo/blog-elinoi/typescript-blog/src/saga/saga.ts",["84"],"import \"regenerator-runtime/runtime\";\nexport const ARTICLES_RECEIVED = \"ARTICLES_RECEIVED\";\n\nimport { takeLatest, all } from \"redux-saga/effects\";\n\nfunction* getArticles() {\n  console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\", \"I'm in Saga !\");\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(\"FETCH_ARTICLES\", getArticles);\n}\n\nexport function* rootSaga() {\n  yield all([actionWatcher()]);\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/articles_reducer.ts",["85"],"import { AnyAction } from \"redux\";\nimport { FETCH_ARTICLES, FETCH_ARTICLE, DELETE_ARTICLE, ARTICLE_UPDATED } from \"../actions\";\nimport { ARTICLES_RECEIVED } from \"../saga/saga\";\nimport { ArticleType } from \"../interface\";\n\nexport default function (state: ArticleType[] = [], action: AnyAction): any {\n  switch (action.type) {\n    case FETCH_ARTICLES:\n      console.log(\"I'm in reducer\");\n      return action.payload;\n    case ARTICLES_RECEIVED:\n      console.log(\"I've been through Saga\");\n      return { ...state };\n    case FETCH_ARTICLE:\n      return [action.payload];\n    case ARTICLE_UPDATED:\n      return state.map((item) => {\n        if (item.id === action.payload.id) return action.payload;\n        return item;\n      });\n    case DELETE_ARTICLE:\n      return state.filter((article) => article !== action.payload);\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/author_reducer.ts",["86"],"import { AnyAction } from \"redux\";\nimport { SET_AUTHOR, AUTHOR_CREATED } from \"../actions\";\n\nexport default function (state = [], action: AnyAction): any {\n  switch (action.type) {\n    case SET_AUTHOR:\n      return action.payload;\n    case AUTHOR_CREATED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/authors_reducer.ts",["87","88","89"],"import { FETCH_AUTHORS, SET_AUTHOR } from \"../actions\";\n\nexport default function (state = [], action: any) {\n  switch (action.type) {\n    case FETCH_AUTHORS:\n      return action.payload;\n    case SET_AUTHOR:\n      return [action.payload];\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/comments_reducer.ts",["90"],"import { AnyAction } from \"redux\";\nimport { COMMENT_CREATED, FETCH_COMMENTS } from \"../actions\";\nimport { CommentType } from \"../interface\";\n\nexport default function (state: CommentType[] = [], action: AnyAction) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return action.payload;\n    case COMMENT_CREATED:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_index.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_show.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_update.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/home.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_new.tsx",["91"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { history } from \"../index\";\n\nimport { createArticle } from \"../actions/index\";\nimport { ArticleType, AuthorType, State } from \"../interface\";\n\ninterface Props {\n  author: AuthorType | null;\n  createArticle: (body: string, callback: (arg: ArticleType) => void) => AnyAction;\n}\n\nclass ArticlesNew extends React.Component<InjectedFormProps<AuthorType, Props> & Props> {\n  onSubmit = (values: any) => {\n    if (this.props.author != null) {\n      Object.assign(values, { author: `/api/authors/${this.props.author.id}` });\n    }\n    this.props.createArticle(values, (article) => {\n      history.push(\"/articles\"); // Navigate after submit\n      return article;\n    });\n  };\n\n  render() {\n    if (this.props.author === null) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div key=\"add\" className=\"form-container\">\n        <div className=\"overlay\"></div>\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputBrand\">Title</label>\n            <Field\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Your article title\"\n              component=\"input\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputModel\">Content</label>\n            <Field\n              name=\"content\"\n              type=\"textarea\"\n              placeholder=\"great content\"\n              component=\"textarea\"\n              className=\"form-control\"\n            />\n          </div>\n          <button className=\"btn btn-primary btn-cta\" type=\"submit\">\n            Add an article\n          </button>\n        </form>\n        <Link to=\"/articles\">Back</Link>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: State) {\n  return { author: state.author };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ createArticle }, dispatch);\n}\n\nexport default reduxForm<AuthorType, Props>({ form: \"newPostForm\" })(\n  connect(mapStateToProps, mapDispatchToProps)(ArticlesNew),\n);\n","/home/mateo/blog-elinoi/typescript-blog/src/containers/authors_index.tsx",["92"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { fetchAuthors, fetchArticles } from \"../actions/index\";\nimport Article from \"../components/article\";\nimport { ArticleType, AuthorType, State } from \"../interface\";\n\ninterface Props {\n  fetchAuthors: () => AnyAction;\n  fetchArticles: () => AnyAction;\n  articles: ArticleType[];\n  authors: AuthorType[];\n  author: AuthorType | null;\n}\n\nclass AuthorsIndex extends React.Component<Props> {\n  componentDidMount() {\n    this.props.fetchAuthors();\n    this.props.fetchArticles();\n  }\n\n  handleLoad = (author: any) => {\n    const articles = this.props.articles.filter((article) => {\n      return article.author.id === `/api/authors/${author.id}`;\n    });\n    return articles.map((article) => {\n      return <Article article={article} key={article.id} />;\n    });\n  };\n\n  render() {\n    if (this.props.author === null) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.authors.length === 0) {\n      return [\n        <div key=\"firstrow\" className=\"first-row\">\n          <h3>Blog</h3>\n          <Link to=\"/articles\">Back</Link>\n        </div>,\n        <div className=\"no-article\" key=\"noauthor\">\n          No authors yet\n        </div>,\n      ];\n    }\n    return [\n      <div key=\"top\">\n        <div className=\"first-row\">\n          <h3>Blog</h3>\n          <Link to=\"/articles\" key=\"sthing\">\n            Back\n          </Link>\n        </div>\n\n        <div className=\"list-container\" key=\"authors\">\n          {this.props.authors.map((author) => {\n            return (\n              <div key={author.id} className=\"author-smallad\">\n                <div className=\"post-item\">\n                  <h2>\n                    <strong>\n                      {author.firstname} {author.lastname}{\" \"}\n                    </strong>\n                  </h2>\n                  {this.handleLoad(author)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>,\n    ];\n  }\n}\n\nfunction mapStateToProps(state: State) {\n  return {\n    authors: state.authors,\n    articles: state.articles,\n    author: state.author,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ fetchAuthors, fetchArticles }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorsIndex);\n","/home/mateo/blog-elinoi/typescript-blog/src/interface.ts",[],"/home/mateo/blog-elinoi/typescript-blog/src/actions/index.ts",["93","94","95","96","97","98"],"export const FETCH_ARTICLES = \"FETCH_ARTICLES\";\nexport const ARTICLE_CREATED = \"ARTICLE_CREATED\";\nexport const ARTICLE_UPDATED = \"ARTICLE_UPDATED\";\nexport const FETCH_ARTICLE = \"FETCH_ARTICLE\";\nexport const DELETE_ARTICLE = \"DELETE_ARTICLE\";\n\nexport const SET_AUTHOR = \"SET_AUTHOR\";\nexport const AUTHOR_CREATED = \"AUTHOR_CREATED\";\nexport const FETCH_AUTHORS = \"FETCH_AUTHORS\";\n\nexport const COMMENT_CREATED = \"COMMENT_CREATED\";\nexport const FETCH_COMMENTS = \"FETCH_COMMENTS\";\n\nimport axios from \"axios\";\nimport { AnyAction } from \"redux\";\nimport { ArticleType, AuthorType } from \"../interface\";\n\nexport function fetchArticles(): AnyAction {\n  const request = fetch(\"http://localhost:8000/api/articles?page=1\", {\n    method: \"GET\",\n    headers: { accept: \"application/json\" },\n  }).then((response) => response.json());\n\n  return {\n    type: FETCH_ARTICLES,\n    payload: request,\n  };\n}\n\nexport function createArticle(body: string, callback: (values: any) => void): AnyAction {\n  const request = fetch(\"http://localhost:8000/api/articles\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/ld+json\" },\n    body: JSON.stringify(body),\n  })\n    .then((response) => response.json())\n    .then(callback);\n\n  return {\n    type: ARTICLE_CREATED,\n    payload: request,\n  };\n}\n\nexport const fetchArticle = async (iri: string): Promise<any> => {\n  try {\n    const resp = await axios.get(`http://localhost:8000${iri}`);\n    return {\n      type: FETCH_ARTICLE,\n      payload: resp.data,\n    };\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport function updateArticle(body: ArticleType, id: number, callback: (values: ArticleType) => void): AnyAction {\n  const resp = fetch(`http://localhost:8000/api/articles/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/ld+json\" },\n    body: JSON.stringify(body),\n  })\n    .then((response) => response.json())\n    .then(callback);\n\n  return {\n    type: ARTICLE_UPDATED,\n    payload: resp,\n  };\n}\n\nexport function deleteArticle(article: ArticleType, callback: () => void) {\n  fetch(`http://localhost:8000/api/articles/${article.id}`, { method: \"DELETE\" })\n    .then((r) => r.text())\n    .then(callback);\n\n  return {\n    type: DELETE_ARTICLE,\n    payload: article,\n  };\n}\n\nexport const fetchAuthors = (): AnyAction => {\n  const promise = fetch(\"http://localhost:8000/api/authors?page=1\", {\n    method: \"GET\",\n    headers: { accept: \"application/json\" },\n  }).then((response) => response.json());\n\n  return {\n    type: FETCH_AUTHORS,\n    payload: promise,\n  };\n};\n\nexport function setAuthor(author: AuthorType): AnyAction {\n  return {\n    type: SET_AUTHOR,\n    payload: author,\n  };\n}\n\nexport function createAuthor(body: Partial<AuthorType>, callback: (values: any) => void): AnyAction {\n  const request = fetch(\"http://localhost:8000/api/authors\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/ld+json\" },\n    body: JSON.stringify(body),\n  })\n    .then((response) => response.json())\n    .then(callback);\n  (\"Mateo's\");\n  return {\n    type: AUTHOR_CREATED,\n    payload: request,\n  };\n}\n\nexport function createComment(body: string) {\n  const request = fetch(\"http://localhost:8000/api/comments\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/ld+json\" },\n    body: JSON.stringify(body),\n  }).then((response) => response.json());\n\n  return {\n    type: COMMENT_CREATED,\n    payload: request,\n  };\n}\n\nexport function fetchComments(id: number) {\n  const promise = axios\n    .get(`http://localhost:8000/api/articles/${id}/comments`)\n    .then((response) => console.log(response.data));\n  return {\n    type: FETCH_COMMENTS,\n    payload: promise,\n  };\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_index.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_new.tsx",["99"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { createComment } from \"../actions/index\";\nimport { ArticleType } from \"../interface\";\n\ninterface Props {\n  createComment: (values: string, postId: number) => AnyAction;\n  article: ArticleType;\n}\n\nclass CommentsNew extends React.Component<InjectedFormProps<ArticleType, Props> & Props> {\n  onSubmit = (values: any) => {\n    const postId = this.props.article.id;\n    Object.assign(values, { article: `/api/articles/${postId}` });\n    this.props.createComment(values, postId);\n  };\n\n  render() {\n    return (\n      <div key=\"add\" className=\"form-container\" style={{ marginTop: \"24px\" }}>\n        <div className=\"overlay\"></div>\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n          <div className=\"form-group\">\n            <Field\n              name=\"content\"\n              type=\"text\"\n              placeholder=\"Your comment\"\n              component=\"input\"\n              className=\"form-control\"\n              autoFocus\n            />\n          </div>\n          <button className=\"btn btn-primary btn-cta\" type=\"submit\">\n            Add a comment\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ createComment }, dispatch);\n}\n\nexport default reduxForm<ArticleType, Props>({ form: \"newCommentForm\" })(\n  connect(null, mapDispatchToProps)(CommentsNew),\n);\n","/home/mateo/blog-elinoi/typescript-blog/src/components/article.tsx",["100"],"import React from \"react\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ArticleType } from \"../interface\";\n\ninterface Props {\n  article: ArticleType;\n}\n\nclass Article extends Component<Props> {\n  render() {\n    return (\n      <div className=\"article-smallad\" key={this.props.article.id}>\n        <Link to={`/articles/${this.props.article.id}`}>\n          <div className=\"post-item\">\n            <h3>{this.props.article.title}</h3>\n            <p>{this.props.article.content.substring(0, 100)}...</p>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Article;\n",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":28},{"ruleId":"108","severity":1,"message":"109","line":6,"column":73,"nodeType":"110","messageId":"111","endLine":6,"endColumn":76,"suggestions":"112"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":58,"nodeType":"110","messageId":"111","endLine":4,"endColumn":61,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":16,"nodeType":"106","messageId":"107","endLine":3,"endColumn":50},{"ruleId":"104","severity":1,"message":"114","line":3,"column":38,"nodeType":"115","messageId":"116","endLine":3,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":3,"column":46,"nodeType":"110","messageId":"111","endLine":3,"endColumn":49,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":16,"nodeType":"106","messageId":"107","endLine":5,"endColumn":71},{"ruleId":"108","severity":1,"message":"109","line":17,"column":23,"nodeType":"110","messageId":"111","endLine":17,"endColumn":26,"suggestions":"118"},{"ruleId":"108","severity":1,"message":"109","line":24,"column":25,"nodeType":"110","messageId":"111","endLine":24,"endColumn":28,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"109","line":30,"column":64,"nodeType":"110","messageId":"111","endLine":30,"endColumn":67,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"109","line":45,"column":58,"nodeType":"110","messageId":"111","endLine":45,"endColumn":61,"suggestions":"121"},{"ruleId":"104","severity":1,"message":"105","line":72,"column":8,"nodeType":"106","messageId":"107","endLine":72,"endColumn":74},{"ruleId":"108","severity":1,"message":"109","line":102,"column":76,"nodeType":"110","messageId":"111","endLine":102,"endColumn":79,"suggestions":"122"},{"ruleId":"104","severity":1,"message":"105","line":117,"column":8,"nodeType":"106","messageId":"107","endLine":117,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":130,"column":8,"nodeType":"106","messageId":"107","endLine":130,"endColumn":42},{"ruleId":"108","severity":1,"message":"109","line":15,"column":23,"nodeType":"110","messageId":"111","endLine":15,"endColumn":26,"suggestions":"123"},{"ruleId":"104","severity":1,"message":"105","line":11,"column":3,"nodeType":"124","messageId":"107","endLine":11,"endColumn":11},{"ruleId":"102","replacedBy":"125"},"jest/no-try-expect",["126"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["127","128"],["129","130"],"Argument 'action' should be typed with a non-any type.","Identifier","anyTypedArg",["131","132"],["133","134"],["135","136"],["137","138"],["139","140"],["141","142"],["143","144"],"FunctionExpression",["126"],"no-conditional-expect",{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"148","fix":"152","desc":"150"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"148","fix":"154","desc":"150"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"148","fix":"156","desc":"150"},{"messageId":"145","fix":"157","desc":"147"},{"messageId":"148","fix":"158","desc":"150"},{"messageId":"145","fix":"159","desc":"147"},{"messageId":"148","fix":"160","desc":"150"},{"messageId":"145","fix":"161","desc":"147"},{"messageId":"148","fix":"162","desc":"150"},{"messageId":"145","fix":"163","desc":"147"},{"messageId":"148","fix":"164","desc":"150"},{"messageId":"145","fix":"165","desc":"147"},{"messageId":"148","fix":"166","desc":"150"},"suggestUnknown",{"range":"167","text":"168"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"167","text":"169"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"170","text":"168"},{"range":"170","text":"169"},{"range":"171","text":"168"},{"range":"171","text":"169"},{"range":"172","text":"168"},{"range":"172","text":"169"},{"range":"173","text":"168"},{"range":"173","text":"169"},{"range":"174","text":"168"},{"range":"174","text":"169"},{"range":"175","text":"168"},{"range":"175","text":"169"},{"range":"176","text":"168"},{"range":"176","text":"169"},{"range":"177","text":"168"},{"range":"177","text":"169"},[295,298],"unknown","never",[150,153],[102,105],[645,648],[693,696],[949,952],[1341,1344],[2730,2733],[515,518]]