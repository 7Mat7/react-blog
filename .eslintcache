[{"/home/mateo/blog-elinoi/typescript-blog/src/index.tsx":"1","/home/mateo/blog-elinoi/typescript-blog/src/saga/saga.ts":"2","/home/mateo/blog-elinoi/typescript-blog/src/reducers/articles_reducer.ts":"3","/home/mateo/blog-elinoi/typescript-blog/src/reducers/author_reducer.ts":"4","/home/mateo/blog-elinoi/typescript-blog/src/reducers/authors_reducer.ts":"5","/home/mateo/blog-elinoi/typescript-blog/src/reducers/comments_reducer.ts":"6","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_index.tsx":"7","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_show.tsx":"8","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_update.tsx":"9","/home/mateo/blog-elinoi/typescript-blog/src/containers/home.tsx":"10","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_new.tsx":"11","/home/mateo/blog-elinoi/typescript-blog/src/containers/authors_index.tsx":"12","/home/mateo/blog-elinoi/typescript-blog/src/interface.ts":"13","/home/mateo/blog-elinoi/typescript-blog/src/actions/index.ts":"14","/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_new.tsx":"15","/home/mateo/blog-elinoi/typescript-blog/src/components/article.tsx":"16","/home/mateo/blog-elinoi/typescript-blog/src/api/api.ts":"17","/home/mateo/blog-elinoi/typescript-blog/src/store.tsx":"18","/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_index.tsx":"19","/home/mateo/blog-elinoi/typescript-blog/src/actions/action_types.ts":"20"},{"size":1317,"mtime":1612258944579,"results":"21","hashOfConfig":"22"},{"size":2074,"mtime":1612516293842,"results":"23","hashOfConfig":"22"},{"size":762,"mtime":1612516339234,"results":"24","hashOfConfig":"22"},{"size":337,"mtime":1612516350106,"results":"25","hashOfConfig":"22"},{"size":331,"mtime":1612516356222,"results":"26","hashOfConfig":"22"},{"size":424,"mtime":1612516326970,"results":"27","hashOfConfig":"22"},{"size":1465,"mtime":1612196638043,"results":"28","hashOfConfig":"22"},{"size":3036,"mtime":1612457663094,"results":"29","hashOfConfig":"22"},{"size":2947,"mtime":1612515639541,"results":"30","hashOfConfig":"22"},{"size":3257,"mtime":1612342786635,"results":"31","hashOfConfig":"22"},{"size":2370,"mtime":1612456855994,"results":"32","hashOfConfig":"22"},{"size":2451,"mtime":1612197876348,"results":"33","hashOfConfig":"22"},{"size":548,"mtime":1611927267065,"results":"34","hashOfConfig":"35"},{"size":2375,"mtime":1612516513728,"results":"36","hashOfConfig":"22"},{"size":1601,"mtime":1612372843643,"results":"37","hashOfConfig":"22"},{"size":637,"mtime":1612371844203,"results":"38","hashOfConfig":"22"},{"size":1904,"mtime":1612458620887,"results":"39","hashOfConfig":"22"},{"size":1220,"mtime":1612359451277,"results":"40","hashOfConfig":"22"},{"size":1191,"mtime":1612456991371,"results":"41","hashOfConfig":"22"},{"size":848,"mtime":1612515790353,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"7hc9dk",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xb7fnp",{"filePath":"77","messages":"78","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/home/mateo/blog-elinoi/typescript-blog/src/index.tsx",[],["94"],"/home/mateo/blog-elinoi/typescript-blog/src/saga/saga.ts",["95"],"import \"regenerator-runtime/runtime\";\nimport { fetchArticle, fetchArticles, fetchAuthors, fetchComments, postNewComment, putArticle } from \"../api/api\";\n\nimport { call, put, all, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport {\n  receiveArticles,\n  receiveAuthors,\n  receiveNewComment,\n  receiveComments,\n  receiveUpdateArticle,\n} from \"../actions/index\";\nimport {\n  REQUEST_ARTICLES,\n  REQUEST_AUTHORS,\n  REQUEST_ARTICLE,\n  REQUEST_CREATE_COMMENT,\n  REQUEST_COMMENTS,\n  REQUEST_ARTICLE_UPDATE,\n} from \"../actions/action_types\";\nimport { AnyAction } from \"redux\";\n\nfunction* getArticles() {\n  try {\n    const data = yield call(fetchArticles);\n    yield put(receiveArticles(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* getArticle(action: AnyAction) {\n  try {\n    const data = yield call(fetchArticle, action);\n    yield put(receiveArticles(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* getAuthors() {\n  try {\n    const data = yield call(fetchAuthors);\n    yield put(receiveAuthors(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* newCommentRequest(action: AnyAction) {\n  try {\n    const data = yield call(postNewComment, action);\n    yield put(receiveNewComment(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* getComments(action: AnyAction) {\n  try {\n    const data = yield call(fetchComments, action.iri);\n    yield put(receiveComments(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* getArticleUpdate(action: AnyAction) {\n  try {\n    const data = yield call(putArticle, action);\n    yield put(receiveUpdateArticle(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(REQUEST_AUTHORS, getAuthors);\n  yield takeLatest(REQUEST_ARTICLES, getArticles);\n  yield takeEvery(REQUEST_ARTICLE, getArticle);\n  yield takeEvery(REQUEST_CREATE_COMMENT, newCommentRequest);\n  yield takeEvery(REQUEST_COMMENTS, getComments);\n  yield takeEvery(REQUEST_ARTICLE_UPDATE, getArticleUpdate);\n}\n\nexport default function* rootSaga(): any {\n  yield all([actionWatcher()]);\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/articles_reducer.ts",["96"],"import { AnyAction } from \"redux\";\nimport { RECEIVE_ARTICLE, DELETE_ARTICLE, RECEIVE_ARTICLES, RECEIVE_ARTICLE_UPDATE } from \"../actions/action_types\";\nimport { ArticleType } from \"../interface\";\n\nexport default function (state: ArticleType[] = [], action: AnyAction): any {\n  switch (action.type) {\n    case RECEIVE_ARTICLES:\n      console.log(action.data);\n      return action.data;\n    case RECEIVE_ARTICLE:\n      console.log(action.data);\n      return [action.data];\n    case RECEIVE_ARTICLE_UPDATE:\n      return state.map((item) => {\n        if (item.id === action.data.id) return action.data;\n        return item;\n      });\n    case DELETE_ARTICLE:\n      return state.filter((article) => article !== action.payload);\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/author_reducer.ts",["97"],"import { AnyAction } from \"redux\";\nimport { SET_AUTHOR, AUTHOR_CREATED } from \"../actions/action_types\";\n\nexport default function (state = [], action: AnyAction): any {\n  switch (action.type) {\n    case SET_AUTHOR:\n      return action.payload;\n    case AUTHOR_CREATED:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/authors_reducer.ts",["98"],"import { AnyAction } from \"redux\";\nimport { RECEIVE_AUTHORS } from \"../actions/action_types\";\nimport { AuthorType } from \"../interface\";\n\nexport default function (state: AuthorType[] = [], action: AnyAction): any {\n  switch (action.type) {\n    case RECEIVE_AUTHORS:\n      return action.data;\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/reducers/comments_reducer.ts",["99"],"import { AnyAction } from \"redux\";\nimport { RECEIVE_COMMENTS, RECEIVE_NEW_COMMENT } from \"../actions/action_types\";\nimport { CommentType } from \"../interface\";\n\nexport default function (state: CommentType[] = [], action: AnyAction): any {\n  switch (action.type) {\n    case RECEIVE_COMMENTS:\n      return action.data;\n    case RECEIVE_NEW_COMMENT:\n      return [...state, action.data];\n    default:\n      return state;\n  }\n}\n","/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_index.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_show.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_update.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/home.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/articles_new.tsx",["100"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { history } from \"../index\";\n\nimport { requestArticle } from \"../actions/index\";\nimport { ArticleType, AuthorType, State } from \"../interface\";\n\ninterface Props {\n  author: AuthorType | null;\n  createArticle: (body: string, callback: (arg: ArticleType) => void) => AnyAction;\n}\n\nclass ArticlesNew extends React.Component<InjectedFormProps<AuthorType, Props> & Props> {\n  onSubmit = (values: any) => {\n    if (this.props.author != null) {\n      Object.assign(values, { author: `/api/authors/${this.props.author.id}` });\n    }\n    console.log(values);\n    this.props.createArticle(values, (article) => {\n      history.push(\"/articles\"); // Navigate after submit\n      return article;\n    });\n  };\n\n  render() {\n    if (this.props.author === null) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div key=\"add\" className=\"form-container\">\n        <div className=\"overlay\"></div>\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputBrand\">Title</label>\n            <Field\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Your article title\"\n              component=\"input\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputModel\">Content</label>\n            <Field\n              name=\"content\"\n              type=\"textarea\"\n              placeholder=\"great content\"\n              component=\"textarea\"\n              className=\"form-control\"\n            />\n          </div>\n          <button className=\"btn btn-primary btn-cta\" type=\"submit\">\n            Add an article\n          </button>\n        </form>\n        <Link to=\"/articles\">Back</Link>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: State) {\n  return { author: state.author };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ requestArticle }, dispatch);\n}\n\nexport default reduxForm<AuthorType, Props>({ form: \"newPostForm\" })(\n  connect(mapStateToProps, mapDispatchToProps)(ArticlesNew),\n);\n","/home/mateo/blog-elinoi/typescript-blog/src/containers/authors_index.tsx",["101"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { requestAuthors, requestArticles } from \"../actions/index\";\nimport Article from \"../components/article\";\nimport { ArticleType, AuthorType, State } from \"../interface\";\n\ninterface Props {\n  requestAuthors: () => AnyAction;\n  fetchArticles: () => AnyAction;\n  articles: ArticleType[];\n  authors: AuthorType[];\n  author: AuthorType | null;\n}\n\nclass AuthorsIndex extends React.Component<Props> {\n  componentDidMount() {\n    this.props.requestAuthors();\n    this.props.fetchArticles();\n  }\n\n  handleLoad = (author: any) => {\n    const articles = this.props.articles.filter((article) => {\n      return article.author.id === `/api/authors/${author.id}`;\n    });\n    return articles.map((article) => {\n      return <Article article={article} key={article.id} />;\n    });\n  };\n\n  render() {\n    if (this.props.author === null) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.authors.length === 0) {\n      return [\n        <div key=\"firstrow\" className=\"first-row\">\n          <h3>Blog</h3>\n          <Link to=\"/articles\">Back</Link>\n        </div>,\n        <div className=\"no-article\" key=\"noauthor\">\n          No authors yet\n        </div>,\n      ];\n    }\n    return [\n      <div key=\"top\">\n        <div className=\"first-row\">\n          <h3>Blog</h3>\n          <Link to=\"/articles\" key=\"sthing\">\n            Back\n          </Link>\n        </div>\n\n        <div className=\"list-container\" key=\"authors\">\n          {this.props.authors.map((author) => {\n            return (\n              <div key={author.id} className=\"author-smallad\">\n                <div className=\"post-item\">\n                  <h2>\n                    <strong>\n                      {author.firstname} {author.lastname}{\" \"}\n                    </strong>\n                  </h2>\n                  {this.handleLoad(author)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>,\n    ];\n  }\n}\n\nfunction mapStateToProps(state: State) {\n  return {\n    authors: state.authors,\n    articles: state.articles,\n    author: state.author,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ requestAuthors, requestArticles }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorsIndex);\n","/home/mateo/blog-elinoi/typescript-blog/src/interface.ts",[],"/home/mateo/blog-elinoi/typescript-blog/src/actions/index.ts",["102","103","104","105","106","107","108","109","110","111","112","113","114"],"/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_new.tsx",["115"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { requestCreateComment } from \"../actions/index\";\nimport { ArticleType } from \"../interface\";\n\ninterface Props {\n  requestCreateComment: (values: string, postId: number) => AnyAction;\n  article: ArticleType;\n}\n\nclass CommentsNew extends React.Component<InjectedFormProps<ArticleType, Props> & Props> {\n  onSubmit = (values: any) => {\n    const postId = this.props.article.id;\n    Object.assign(values, { article: `/api/articles/${postId}` });\n    this.props.requestCreateComment(values, postId);\n  };\n\n  render() {\n    return (\n      <div key=\"add\" className=\"form-container\" style={{ marginTop: \"24px\" }}>\n        <div className=\"overlay\"></div>\n        <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n          <div className=\"form-group\">\n            <Field\n              name=\"content\"\n              type=\"text\"\n              placeholder=\"Your comment\"\n              component=\"input\"\n              className=\"form-control\"\n              autoFocus\n            />\n          </div>\n          <button className=\"btn btn-primary btn-cta\" type=\"submit\">\n            Add a comment\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ requestCreateComment }, dispatch);\n}\n\nexport default reduxForm<ArticleType, Props>({ form: \"newCommentForm\" })(\n  connect(null, mapDispatchToProps)(CommentsNew),\n);\n","/home/mateo/blog-elinoi/typescript-blog/src/components/article.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/api/api.ts",["116","117","118","119","120","121"],"import { AnyAction } from \"redux\";\n\nexport const fetchArticles = async (): Promise<any> => {\n  try {\n    const response = await fetch(\"http://localhost:8000/api/articles\");\n    const data = await response.json();\n    return data[\"hydra:member\"];\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchArticle = async (action: AnyAction): Promise<any> => {\n  try {\n    const response = await fetch(`http://localhost:8000${action.iri}`);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchAuthors = async (): Promise<any> => {\n  try {\n    const response = await fetch(\"http://localhost:8000/api/authors?page=1\");\n    const data = await response.json();\n    return data[\"hydra:member\"];\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const postNewComment = async (action: AnyAction): Promise<any> => {\n  try {\n    const response = await fetch(\"http://localhost:8000/api/comments\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/ld+json\" },\n      body: JSON.stringify(action.body),\n    }).then((response) => response.json());\n    return response;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchComments = async (action: AnyAction): Promise<any> => {\n  try {\n    const response = await fetch(`http://localhost:8000/api/articles/${action}/comments?page=1`);\n    const data = await response.json();\n    return data[\"hydra:member\"];\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const putArticle = async (action: AnyAction): Promise<any> => {\n  try {\n    const response = await fetch(`http://localhost:8000/api/articles/${action.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/ld+json\" },\n      body: JSON.stringify(action.data),\n    }).then((response) => response.json());\n    console.log(action);\n    return response;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","/home/mateo/blog-elinoi/typescript-blog/src/store.tsx",[],"/home/mateo/blog-elinoi/typescript-blog/src/containers/comments_index.tsx",["122"],"import React from \"react\";\nimport { ArticleType, CommentType, State } from \"../interface\";\nimport { requestComments } from \"../actions/index\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  article: ArticleType;\n  requestComments: (data: any) => AnyAction;\n  comments: CommentType[] | null;\n}\n\nclass CommentsIndex extends React.Component<Props> {\n  componentDidMount() {\n    this.props.requestComments(this.props.article.id.toString());\n  }\n\n  render(): JSX.Element | undefined {\n    if (this.props.comments) {\n      return (\n        <div style={{ marginTop: \"24px\" }} key=\"unikey\">\n          {this.props.comments.map((comment) => {\n            return (\n              <div className=\"post-item\" key={comment.id}>\n                {comment.content}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nfunction mapStateToProps(state: State) {\n  return {\n    comments: state.comments,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return bindActionCreators({ requestComments }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsIndex);\n","/home/mateo/blog-elinoi/typescript-blog/src/actions/action_types.ts",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":85,"column":38,"nodeType":"127","messageId":"128","endLine":85,"endColumn":41,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":73,"nodeType":"127","messageId":"128","endLine":5,"endColumn":76,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"126","line":4,"column":58,"nodeType":"127","messageId":"128","endLine":4,"endColumn":61,"suggestions":"131"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":72,"nodeType":"127","messageId":"128","endLine":5,"endColumn":75,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":73,"nodeType":"127","messageId":"128","endLine":5,"endColumn":76,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"126","line":17,"column":23,"nodeType":"127","messageId":"128","endLine":17,"endColumn":26,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"126","line":24,"column":25,"nodeType":"127","messageId":"128","endLine":24,"endColumn":28,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":9,"column":33,"nodeType":"138","messageId":"139","endLine":9,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":9,"column":39,"nodeType":"127","messageId":"128","endLine":9,"endColumn":42,"suggestions":"140"},{"ruleId":"136","severity":1,"message":"137","line":12,"column":32,"nodeType":"138","messageId":"139","endLine":12,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":12,"column":38,"nodeType":"127","messageId":"128","endLine":12,"endColumn":41,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":20,"column":38,"nodeType":"138","messageId":"139","endLine":20,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":20,"column":44,"nodeType":"127","messageId":"128","endLine":20,"endColumn":47,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":30,"column":32,"nodeType":"138","messageId":"139","endLine":30,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":30,"column":38,"nodeType":"127","messageId":"128","endLine":30,"endColumn":41,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"137","line":34,"column":35,"nodeType":"138","messageId":"139","endLine":34,"endColumn":44},{"ruleId":"125","severity":1,"message":"126","line":34,"column":41,"nodeType":"127","messageId":"128","endLine":34,"endColumn":44,"suggestions":"144"},{"ruleId":"136","severity":1,"message":"137","line":37,"column":33,"nodeType":"138","messageId":"139","endLine":37,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":37,"column":39,"nodeType":"127","messageId":"128","endLine":37,"endColumn":42,"suggestions":"145"},{"ruleId":"125","severity":1,"message":"126","line":57,"column":76,"nodeType":"127","messageId":"128","endLine":57,"endColumn":79,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"126","line":15,"column":23,"nodeType":"127","messageId":"128","endLine":15,"endColumn":26,"suggestions":"147"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":48,"nodeType":"127","messageId":"128","endLine":3,"endColumn":51,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"126","line":13,"column":64,"nodeType":"127","messageId":"128","endLine":13,"endColumn":67,"suggestions":"149"},{"ruleId":"125","severity":1,"message":"126","line":23,"column":47,"nodeType":"127","messageId":"128","endLine":23,"endColumn":50,"suggestions":"150"},{"ruleId":"125","severity":1,"message":"126","line":33,"column":66,"nodeType":"127","messageId":"128","endLine":33,"endColumn":69,"suggestions":"151"},{"ruleId":"125","severity":1,"message":"126","line":46,"column":65,"nodeType":"127","messageId":"128","endLine":46,"endColumn":68,"suggestions":"152"},{"ruleId":"125","severity":1,"message":"126","line":56,"column":62,"nodeType":"127","messageId":"128","endLine":56,"endColumn":65,"suggestions":"153"},{"ruleId":"125","severity":1,"message":"126","line":9,"column":27,"nodeType":"127","messageId":"128","endLine":9,"endColumn":30,"suggestions":"154"},"jest/no-try-expect",["155"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["156","157"],["158","159"],["160","161"],["162","163"],["164","165"],["166","167"],["168","169"],"@typescript-eslint/explicit-module-boundary-types","Argument 'data' should be typed with a non-any type.","Identifier","anyTypedArg",["170","171"],["172","173"],["174","175"],["176","177"],["178","179"],["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],"no-conditional-expect",{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},{"messageId":"200","fix":"208","desc":"202"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"200","fix":"210","desc":"202"},{"messageId":"203","fix":"211","desc":"205"},{"messageId":"200","fix":"212","desc":"202"},{"messageId":"203","fix":"213","desc":"205"},{"messageId":"200","fix":"214","desc":"202"},{"messageId":"203","fix":"215","desc":"205"},{"messageId":"200","fix":"216","desc":"202"},{"messageId":"203","fix":"217","desc":"205"},{"messageId":"200","fix":"218","desc":"202"},{"messageId":"203","fix":"219","desc":"205"},{"messageId":"200","fix":"220","desc":"202"},{"messageId":"203","fix":"221","desc":"205"},{"messageId":"200","fix":"222","desc":"202"},{"messageId":"203","fix":"223","desc":"205"},{"messageId":"200","fix":"224","desc":"202"},{"messageId":"203","fix":"225","desc":"205"},{"messageId":"200","fix":"226","desc":"202"},{"messageId":"203","fix":"227","desc":"205"},{"messageId":"200","fix":"228","desc":"202"},{"messageId":"203","fix":"229","desc":"205"},{"messageId":"200","fix":"230","desc":"202"},{"messageId":"203","fix":"231","desc":"205"},{"messageId":"200","fix":"232","desc":"202"},{"messageId":"203","fix":"233","desc":"205"},{"messageId":"200","fix":"234","desc":"202"},{"messageId":"203","fix":"235","desc":"205"},{"messageId":"200","fix":"236","desc":"202"},{"messageId":"203","fix":"237","desc":"205"},{"messageId":"200","fix":"238","desc":"202"},{"messageId":"203","fix":"239","desc":"205"},{"messageId":"200","fix":"240","desc":"202"},{"messageId":"203","fix":"241","desc":"205"},{"messageId":"200","fix":"242","desc":"202"},{"messageId":"203","fix":"243","desc":"205"},{"messageId":"200","fix":"244","desc":"202"},{"messageId":"203","fix":"245","desc":"205"},{"messageId":"200","fix":"246","desc":"202"},{"messageId":"203","fix":"247","desc":"205"},"suggestUnknown",{"range":"248","text":"249"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"248","text":"250"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"251","text":"249"},{"range":"251","text":"250"},{"range":"252","text":"249"},{"range":"252","text":"250"},{"range":"253","text":"249"},{"range":"253","text":"250"},{"range":"254","text":"249"},{"range":"254","text":"250"},{"range":"255","text":"249"},{"range":"255","text":"250"},{"range":"256","text":"249"},{"range":"256","text":"250"},{"range":"257","text":"249"},{"range":"257","text":"250"},{"range":"258","text":"249"},{"range":"258","text":"250"},{"range":"259","text":"249"},{"range":"259","text":"250"},{"range":"260","text":"249"},{"range":"260","text":"250"},{"range":"261","text":"249"},{"range":"261","text":"250"},{"range":"262","text":"249"},{"range":"262","text":"250"},{"range":"263","text":"249"},{"range":"263","text":"250"},{"range":"264","text":"249"},{"range":"264","text":"250"},{"range":"265","text":"249"},{"range":"265","text":"250"},{"range":"266","text":"249"},{"range":"266","text":"250"},{"range":"267","text":"249"},{"range":"267","text":"250"},{"range":"268","text":"249"},{"range":"268","text":"250"},{"range":"269","text":"249"},{"range":"269","text":"250"},{"range":"270","text":"249"},{"range":"270","text":"250"},{"range":"271","text":"249"},{"range":"271","text":"250"},[2034,2037],"unknown","never",[269,272],[163,166],[209,212],[233,236],[646,649],[701,704],[307,310],[506,509],[754,757],[1014,1017],[1250,1253],[1455,1458],[2013,2016],[529,532],[83,86],[353,356],[590,593],[868,871],[1253,1256],[1547,1550],[316,319]]